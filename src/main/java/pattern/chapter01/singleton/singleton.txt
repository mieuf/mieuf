单例模式(singleton pattern):
    ensure a class has only one instance,and provide a global point of access to it.
    (确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例)
    
   优点:1.只有一个实例,减少内存开支和系统性能开销,尤其是要频繁创建和销毁的对象;
      2.避免对资源的多重占用,可以优化和共享全局访问资源;
   缺点:1.扩展困难; 2.与单一职责原则矛盾,不应该把业务和设计融合到一起.
   
饿汉模式和懒汉模式:
        两种方案的构造函数和公用方法都是静态的（static），实例和公用方法又都是私有的（private）。
        但是饿汉式每次调用的时候不用做创建，直接返回已经创建好的实例。
        这样虽然节省了时间，但是却占用了空间，实例本身为static的，会一直在内存中带着。
        懒汉式则是判断，在用的时候才加载，会影响程序的速度。
